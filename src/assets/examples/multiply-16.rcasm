;**********************************************************************
; Multiply Program
;
; Multiplies two unsigned 8-bit numbers to produce a 16-bit result.
; The arguments are taken from X and Y and the result is placed in M1/M2.
; Overflow (beyond the 16-bit result) is ignored.
;**********************************************************************

; Initialise calculation
        clr m1          ; copy X into M2
        mov m2,x
        ldi a,-7        ; set counter D to -7
        mov d,a

; If MSB of Y isn't set then M2 = 0
        clr b
        mov c,y
        orr
        bmi loop
        clr m2

; Perform Arithmetic Shift Left on M as a whole
loop:   mov b,m1        ; Shift M1 left (non-circular)
        rol
        mov c,a
        ldi b, -15      ; B=11111110
        and
        mov m1,a
        mov b,m2        ; carry MSB of M2 into M1 if set
        not
        bmi jmp1
        mov b,m1
        inc
        mov m1,a
jmp1:   mov b,m2        ; Shift M2 left (non-circular)
        rol
        mov c,a
        ldi b, -15      ; B=11111110
        and
        mov m2,a

; Shift Y left (circular)
        mov b,y
        rol
        mov y,a

; Add X to M2 if MSB of Y set (carry through to M1)
        mov b,y         ; If Y has MSB set
        not
        bmi lab2
        mov b,m2        ; then M2 = M2 + X
        mov c,x
        add
        mov m2,a
        bcs lab1a       ; if carried
        jmp lab2
lab1a:  mov b,m1        ; then M1 = M1 + 1
        inc
        mov m1,a

; Increase D counter and loop if not reached zero
lab2:   mov b,d
        inc d
        bne loop

        hlt

; Operates on the principle of long binary multiplication. For example:
; X:   11011101  (221)
; Y: * 10110011  (179)
;    ================
; M1:  00000000  M2: 11011101   Y: [1]0110011  (11011101 x 1)
; M1:  00000001  M2: 10111010   Y: [0]1100111  (11011101 x 0)
; M1:  00000100  M2: 01010001   Y: [1]1001110  (11011101 x 1)
; M1:  00001001  M2: 01111111   Y: [1]0011101  (11011101 x 1)
; M1:  00010010  M2: 11111110   Y: [0]0111011  (11011101 x 0)
; M1:  00100101  M2: 11111100   Y: [0]1110110  (11011101 x 0)
; M1:  01001100  M2: 11010101   Y: [1]1101100  (11011101 x 1)
; M1:  10011010  M2: 10000111   Y: [1]1011001  (11011101 x 1)
;    =================
; M1:  10011010  M2: 10000111  (39,559)
